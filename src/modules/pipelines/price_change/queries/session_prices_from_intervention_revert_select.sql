WITH CHANNELS_TABLE AS (
    SELECT
        CP.ID                                   AS ID_SESSION,
        TO_JSON(ARRAY_AGG(CSTC.CHANNEL_ID))     AS CHANNEL_IDS
    FROM DWH_FEVER.LAKE.PREMILLER_LAKE_CORE_PLAN CP
        INNER JOIN DWH_FEVER.LAKE.PREMILLER_LAKE_CORE_SESSIONTYPETIERFORCHANNEL CSTC
            ON CP.SESSION_TYPE_ID = CSTC.SESSION_TYPE_ID
    GROUP BY CP.ID
)

SELECT PC.ID_PLAN,
       PC.ID_SESSION,
       IFF(
               CMPMS.MUST_USE_TAX_BASE,
               IFF(PLCS.IS_ACTIVE, PLCS.TICKET_PRICE_TAX_BASE, PDS.TICKET_PRICE_TAX_BASE),
               IFF(PLCS.IS_ACTIVE, PLCS.TICKET_PRICE, PDS.TICKET_PRICE)
       )                                          AS CURRENT_PRICE,
       CMPMS.MUST_USE_TAX_BASE,
       CDC.NM_SMALL_UNIT_CONV,
       PC.CURRENT_PRICE                           AS NEW_PRICE,
       PLCS.CURRENCY,
       CT.CHANNEL_IDS,
       PC.INTERVENTION_LABEL,
       CONCAT('{{"revert_id":', PCA.ID_RUN, '}}') AS PRICE_CHANGE_INFO
FROM METABASE.BULK_PRICE_CHANGES_BEFORE_APPLYING PC
    LEFT JOIN DWH_FEVER.LAKE.PREMILLER_LAKE_CORE_SESSIONPRICE PLCS
        ON PC.ID_SESSION = PLCS.SESSION_ID
    INNER JOIN METABASE.BULK_PRICE_CHANGES_APPLIED PCA
        USING (ID_RUN, ID_SESSION, ID_PLAN)
    INNER JOIN DWH_FEVER.LAKE.PREMILLER_LAKE_CORE_PLAN AS PDS
        ON PDS.ID = ID_SESSION
    INNER JOIN DWH_FEVER.PUBLIC.COM_DIM_CURRENCY CDC
        ON CDC.CD_CURRENCY = PLCS.CURRENCY
    INNER JOIN DWH_FEVER.LAKE.PREMILLER_LAKE_CORE_MAINPLAN AS PDP
        ON PDS.MAIN_PLAN_ID = PDP.ID
    INNER JOIN DWH_FEVER.LAKE.PREMILLER_LAKE_CORE_MAINPLANMANAGEMENTSETTINGS AS CMPMS
        ON CMPMS.MAIN_PLAN_ID = PDP.ID
    INNER JOIN CHANNELS_TABLE CT
        ON CT.ID_SESSION = PC.ID_SESSION
WHERE PDS.STARTS_AT > CURRENT_TIMESTAMP() -- dont change finished sessions
  AND PLCS.CHANNEL_ID = 'fever-marketplace'
  AND PCA.ID_RUN = '{revert_id_run}';
